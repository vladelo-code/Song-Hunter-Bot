from aiogram import Dispatcher
from aiogram.types import CallbackQuery

from app.keyboards.start_keyboard import start_keyboard
from app.messages.texts import NO_USERNAME_USER, HOME_MESSAGE
from app.logger import setup_logger

logger = setup_logger(__name__)


async def show_rules_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üè† –î–æ–º–æ–π".
    –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    :param callback: –û–±—ä–µ–∫—Ç CallbackQuery –æ—Ç Telegram.
    """
    username = callback.from_user.username or NO_USERNAME_USER
    logger.info(f"üëã –ò–≥—Ä–æ–∫ @{username} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    await callback.message.edit_text(HOME_MESSAGE, parse_mode='Markdown', reply_markup=start_keyboard())
    await callback.answer()


def register_callback_handler(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üè† –î–æ–º–æ–π".

    :param dp: –û–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ aiogram.
    """
    dp.callback_query.register(show_rules_handler, lambda c: c.data == "home")
