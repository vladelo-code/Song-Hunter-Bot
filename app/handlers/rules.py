from aiogram import Dispatcher
from aiogram.types import CallbackQuery

from app.keyboards.to_home_keyboard import to_home_keyboard
from app.utils.safe_username import get_safe_username
from app.messages.texts import RULES
from app.logger import setup_logger

logger = setup_logger(__name__)


async def show_rules_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã".
    –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ,
    –ø–æ–∫–∞–∑—ã–≤–∞—è —Ç–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.

    :param callback: –û–±—ä–µ–∫—Ç CallbackQuery –æ—Ç Telegram.
    """
    username = get_safe_username(callback.from_user.username)
    logger.info(f"üëã –ò–≥—Ä–æ–∫ @{username} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã!")
    await callback.message.edit_text(RULES, parse_mode='Markdown', reply_markup=to_home_keyboard())
    await callback.answer()


def register_callback_handler(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã".

    :param dp: –û–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ aiogram.
    """
    dp.callback_query.register(show_rules_handler, lambda c: c.data == "rules")
